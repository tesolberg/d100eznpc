@page
@using D100EZNPC.Models;
@using D100EZNPC.Utilities;
@model D100EZNPC.Pages.NPCDetailsModel
@Html.AntiForgeryToken()

<div>
	<h1>
		@Model.npc!.Name
		<button id="edit-btn" class="btn">
			<i class="fa-regular fa-pen-to-square"></i>
		</button>
		<button id="save-btn" class="btn">
			<i class="fa-regular fa-floppy-disk"></i>
		</button>
	</h1>

	<!-- Toggle for unique/generic-->
	<input type="checkbox" data-toggle="toggle" data-size="small">

</div>


<!-- Skill levels and success thresholds -->
<div class="container">
	<div class="row fw-bold">
		<div class="col">
			<span>Base</span>
			<span class="competence-number">@Model.npc.BaseCompetence</span>
			<input class="competence-edit" type="text" asp-for="npc.BaseCompetence" placeholder="@Model.npc.BaseCompetence">
		</div>
		<div class="col">
			<span>Secondary</span>
			<span class="competence-number">@Model.npc.SecondaryCompetence</span>
			<input class="competence-edit" type="text" asp-for="npc.SecondaryCompetence" placeholder="@Model.npc.SecondaryCompetence">
		</div>
		<div class="col">
			<span>Primary</span>
			<span class="competence-number">@Model.npc.PrimaryCompetence</span>
			<input class="competence-edit" type="text" asp-for="npc.PrimaryCompetence" placeholder="@Model.npc.PrimaryCompetence">
		</div>
	</div>
	<div class="row">
		@{
			int[] skillVals = { Model.npc.BaseCompetence, Model.npc.SecondaryCompetence, Model.npc.PrimaryCompetence };
		}
		@for (int i = 0; i < skillVals.Length; i++)
		{
			<div class="col">
				Very Easy &lt;= @SkillCalculator.VeryEasy(skillVals[i]) <br />
				Easy &lt;= @SkillCalculator.Easy(skillVals[i]) <br />
				Standard &lt;= @skillVals[i] <br />
				Hard &lt;= @SkillCalculator.Hard(skillVals[i]) <br />
				Herculean &lt;= @SkillCalculator.Herculean(skillVals[i])
			</div>
		}
	</div>
</div>


<!-- Skill table -->
<div class="container">
	<div class="row">
		<div class="col base-skills" id="base-skills">
			@foreach (var s in Model.SortedSkills![0])
			{
				<button id="@s.Name!.Replace(" ", "-").ToLower()" class="btn skill-button base-skill">@s.Name</button>
				
			}
		</div>
		<div class="col secondary-skills" id="secondary-skills">
			@foreach (var s in Model.SortedSkills![1])
			{
				<button id="@s.Name!.Replace(" ", "-").ToLower()" class="btn rounded skill-button secondary-skill">@s.Name</button>
			}
		</div><div class="col primary-skills" id="primary-skills">
			@foreach (var s in Model.SortedSkills![2])
			{
				<button id="@s.Name!.Replace(" ", "-").ToLower()" class="btn skill-button primary-skill">@s.Name</button>
			}
		</div>
	</div>
</div>

<input id="npc-id" type="hidden" value="@Model.npc.Id" />



@section Scripts {
	<script src="/js/NPCDetails.js"></script>
	<script src="https://kit.fontawesome.com/8a204a0aae.js" crossorigin="anonymous"></script>
	<script>
		$(function () {
			$('input[type="checkbox"]').bootstrapToggle({
				on: 'Unique',
				off: 'Generic',
				style: 'ios' // You can choose different styles here
			});
		});
	</script>
	<link rel="stylesheet" href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css">
	<link rel="stylesheet" href="/css/NPCDetails.css"/>
	<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
}

